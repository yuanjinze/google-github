// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jiostream.proto

package com.qihoo.sdet.jio.api.protocol;

public final class StreamProtocol {
  private StreamProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ChunkRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string uuid = 1;
    /**
     * <code>required string uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // required bytes content = 2;
    /**
     * <code>required bytes content = 2;</code>
     */
    boolean hasContent();
    /**
     * <code>required bytes content = 2;</code>
     */
    com.google.protobuf.ByteString getContent();

    // required int32 offset = 3;
    /**
     * <code>required int32 offset = 3;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int32 offset = 3;</code>
     */
    int getOffset();

    // required int32 capacity = 4;
    /**
     * <code>required int32 capacity = 4;</code>
     */
    boolean hasCapacity();
    /**
     * <code>required int32 capacity = 4;</code>
     */
    int getCapacity();

    // optional string alias = 5;
    /**
     * <code>optional string alias = 5;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string alias = 5;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string alias = 5;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();
  }
  /**
   * Protobuf type {@code ChunkRequest}
   */
  public static final class ChunkRequest extends
      com.google.protobuf.GeneratedMessage
      implements ChunkRequestOrBuilder {
    // Use ChunkRequest.newBuilder() to construct.
    private ChunkRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkRequest defaultInstance;
    public static ChunkRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              content_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              offset_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              capacity_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              alias_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.class, com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkRequest>() {
      public ChunkRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>required bytes content = 2;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes content = 2;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    // required int32 offset = 3;
    public static final int OFFSET_FIELD_NUMBER = 3;
    private int offset_;
    /**
     * <code>required int32 offset = 3;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 offset = 3;</code>
     */
    public int getOffset() {
      return offset_;
    }

    // required int32 capacity = 4;
    public static final int CAPACITY_FIELD_NUMBER = 4;
    private int capacity_;
    /**
     * <code>required int32 capacity = 4;</code>
     */
    public boolean hasCapacity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 capacity = 4;</code>
     */
    public int getCapacity() {
      return capacity_;
    }

    // optional string alias = 5;
    public static final int ALIAS_FIELD_NUMBER = 5;
    private java.lang.Object alias_;
    /**
     * <code>optional string alias = 5;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string alias = 5;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string alias = 5;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uuid_ = "";
      content_ = com.google.protobuf.ByteString.EMPTY;
      offset_ = 0;
      capacity_ = 0;
      alias_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCapacity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, content_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, offset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, capacity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getAliasBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, content_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, offset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, capacity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getAliasBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ChunkRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.class, com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.Builder.class);
      }

      // Construct using com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        capacity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkRequest_descriptor;
      }

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest getDefaultInstanceForType() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.getDefaultInstance();
      }

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest build() {
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest buildPartial() {
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest result = new com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.capacity_ = capacity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.alias_ = alias_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest) {
          return mergeFrom((com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest other) {
        if (other == com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          bitField0_ |= 0x00000001;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasCapacity()) {
          setCapacity(other.getCapacity());
        }
        if (other.hasAlias()) {
          bitField0_ |= 0x00000010;
          alias_ = other.alias_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasContent()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasCapacity()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string uuid = 1;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      // required bytes content = 2;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes content = 2;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes content = 2;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // required int32 offset = 3;
      private int offset_ ;
      /**
       * <code>required int32 offset = 3;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000004;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0;
        onChanged();
        return this;
      }

      // required int32 capacity = 4;
      private int capacity_ ;
      /**
       * <code>required int32 capacity = 4;</code>
       */
      public boolean hasCapacity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 capacity = 4;</code>
       */
      public int getCapacity() {
        return capacity_;
      }
      /**
       * <code>required int32 capacity = 4;</code>
       */
      public Builder setCapacity(int value) {
        bitField0_ |= 0x00000008;
        capacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 capacity = 4;</code>
       */
      public Builder clearCapacity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        capacity_ = 0;
        onChanged();
        return this;
      }

      // optional string alias = 5;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string alias = 5;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string alias = 5;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string alias = 5;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string alias = 5;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string alias = 5;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000010);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string alias = 5;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        alias_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ChunkRequest)
    }

    static {
      defaultInstance = new ChunkRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ChunkRequest)
  }

  public interface ChunkResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string uuid = 1;
    /**
     * <code>required string uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // required int32 offset = 2;
    /**
     * <code>required int32 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int32 offset = 2;</code>
     */
    int getOffset();

    // required string peer = 3;
    /**
     * <code>required string peer = 3;</code>
     */
    boolean hasPeer();
    /**
     * <code>required string peer = 3;</code>
     */
    java.lang.String getPeer();
    /**
     * <code>required string peer = 3;</code>
     */
    com.google.protobuf.ByteString
        getPeerBytes();

    // required bool ok = 4;
    /**
     * <code>required bool ok = 4;</code>
     */
    boolean hasOk();
    /**
     * <code>required bool ok = 4;</code>
     */
    boolean getOk();

    // optional bool eof = 5;
    /**
     * <code>optional bool eof = 5;</code>
     */
    boolean hasEof();
    /**
     * <code>optional bool eof = 5;</code>
     */
    boolean getEof();

    // optional string alias = 6;
    /**
     * <code>optional string alias = 6;</code>
     */
    boolean hasAlias();
    /**
     * <code>optional string alias = 6;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>optional string alias = 6;</code>
     */
    com.google.protobuf.ByteString
        getAliasBytes();
  }
  /**
   * Protobuf type {@code ChunkResponse}
   */
  public static final class ChunkResponse extends
      com.google.protobuf.GeneratedMessage
      implements ChunkResponseOrBuilder {
    // Use ChunkResponse.newBuilder() to construct.
    private ChunkResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkResponse defaultInstance;
    public static ChunkResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              peer_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ok_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              eof_ = input.readBool();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              alias_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.class, com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkResponse>() {
      public ChunkResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 offset = 2;
    public static final int OFFSET_FIELD_NUMBER = 2;
    private int offset_;
    /**
     * <code>required int32 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 offset = 2;</code>
     */
    public int getOffset() {
      return offset_;
    }

    // required string peer = 3;
    public static final int PEER_FIELD_NUMBER = 3;
    private java.lang.Object peer_;
    /**
     * <code>required string peer = 3;</code>
     */
    public boolean hasPeer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string peer = 3;</code>
     */
    public java.lang.String getPeer() {
      java.lang.Object ref = peer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          peer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string peer = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPeerBytes() {
      java.lang.Object ref = peer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bool ok = 4;
    public static final int OK_FIELD_NUMBER = 4;
    private boolean ok_;
    /**
     * <code>required bool ok = 4;</code>
     */
    public boolean hasOk() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool ok = 4;</code>
     */
    public boolean getOk() {
      return ok_;
    }

    // optional bool eof = 5;
    public static final int EOF_FIELD_NUMBER = 5;
    private boolean eof_;
    /**
     * <code>optional bool eof = 5;</code>
     */
    public boolean hasEof() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool eof = 5;</code>
     */
    public boolean getEof() {
      return eof_;
    }

    // optional string alias = 6;
    public static final int ALIAS_FIELD_NUMBER = 6;
    private java.lang.Object alias_;
    /**
     * <code>optional string alias = 6;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string alias = 6;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string alias = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uuid_ = "";
      offset_ = 0;
      peer_ = "";
      ok_ = false;
      eof_ = false;
      alias_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPeer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPeerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, ok_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, eof_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getAliasBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPeerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, ok_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, eof_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getAliasBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ChunkResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.class, com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.Builder.class);
      }

      // Construct using com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        peer_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ok_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        eof_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.internal_static_ChunkResponse_descriptor;
      }

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse getDefaultInstanceForType() {
        return com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance();
      }

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse build() {
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse buildPartial() {
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse result = new com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.peer_ = peer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ok_ = ok_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eof_ = eof_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.alias_ = alias_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse) {
          return mergeFrom((com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse other) {
        if (other == com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          bitField0_ |= 0x00000001;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasPeer()) {
          bitField0_ |= 0x00000004;
          peer_ = other.peer_;
          onChanged();
        }
        if (other.hasOk()) {
          setOk(other.getOk());
        }
        if (other.hasEof()) {
          setEof(other.getEof());
        }
        if (other.hasAlias()) {
          bitField0_ |= 0x00000020;
          alias_ = other.alias_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasPeer()) {
          
          return false;
        }
        if (!hasOk()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string uuid = 1;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      // required int32 offset = 2;
      private int offset_ ;
      /**
       * <code>required int32 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 offset = 2;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>required int32 offset = 2;</code>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0;
        onChanged();
        return this;
      }

      // required string peer = 3;
      private java.lang.Object peer_ = "";
      /**
       * <code>required string peer = 3;</code>
       */
      public boolean hasPeer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string peer = 3;</code>
       */
      public java.lang.String getPeer() {
        java.lang.Object ref = peer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          peer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string peer = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPeerBytes() {
        java.lang.Object ref = peer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string peer = 3;</code>
       */
      public Builder setPeer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        peer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string peer = 3;</code>
       */
      public Builder clearPeer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        peer_ = getDefaultInstance().getPeer();
        onChanged();
        return this;
      }
      /**
       * <code>required string peer = 3;</code>
       */
      public Builder setPeerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        peer_ = value;
        onChanged();
        return this;
      }

      // required bool ok = 4;
      private boolean ok_ ;
      /**
       * <code>required bool ok = 4;</code>
       */
      public boolean hasOk() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool ok = 4;</code>
       */
      public boolean getOk() {
        return ok_;
      }
      /**
       * <code>required bool ok = 4;</code>
       */
      public Builder setOk(boolean value) {
        bitField0_ |= 0x00000008;
        ok_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool ok = 4;</code>
       */
      public Builder clearOk() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ok_ = false;
        onChanged();
        return this;
      }

      // optional bool eof = 5;
      private boolean eof_ ;
      /**
       * <code>optional bool eof = 5;</code>
       */
      public boolean hasEof() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool eof = 5;</code>
       */
      public boolean getEof() {
        return eof_;
      }
      /**
       * <code>optional bool eof = 5;</code>
       */
      public Builder setEof(boolean value) {
        bitField0_ |= 0x00000010;
        eof_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool eof = 5;</code>
       */
      public Builder clearEof() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eof_ = false;
        onChanged();
        return this;
      }

      // optional string alias = 6;
      private java.lang.Object alias_ = "";
      /**
       * <code>optional string alias = 6;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string alias = 6;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string alias = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string alias = 6;</code>
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string alias = 6;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000020);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string alias = 6;</code>
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        alias_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ChunkResponse)
    }

    static {
      defaultInstance = new ChunkResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ChunkResponse)
  }

  /**
   * Protobuf service {@code StreamService}
   */
  public static abstract class StreamService
      implements com.google.protobuf.Service {
    protected StreamService() {}

    public interface Interface {
      /**
       * <code>rpc stream(.ChunkRequest) returns (.ChunkResponse);</code>
       */
      public abstract void stream(
          com.google.protobuf.RpcController controller,
          com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest request,
          com.google.protobuf.RpcCallback<com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new StreamService() {
        @java.lang.Override
        public  void stream(
            com.google.protobuf.RpcController controller,
            com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest request,
            com.google.protobuf.RpcCallback<com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse> done) {
          impl.stream(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.stream(controller, (com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc stream(.ChunkRequest) returns (.ChunkResponse);</code>
     */
    public abstract void stream(
        com.google.protobuf.RpcController controller,
        com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest request,
        com.google.protobuf.RpcCallback<com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.qihoo.sdet.jio.api.protocol.StreamProtocol.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.stream(controller, (com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest)request,
            com.google.protobuf.RpcUtil.<com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends com.qihoo.sdet.jio.api.protocol.StreamProtocol.StreamService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void stream(
          com.google.protobuf.RpcController controller,
          com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest request,
          com.google.protobuf.RpcCallback<com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.class,
            com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse stream(
          com.google.protobuf.RpcController controller,
          com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse stream(
          com.google.protobuf.RpcController controller,
          com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkRequest request)
          throws com.google.protobuf.ServiceException {
        return (com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.qihoo.sdet.jio.api.protocol.StreamProtocol.ChunkResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:StreamService)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ChunkRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ChunkRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ChunkResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ChunkResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017jiostream.proto\"^\n\014ChunkRequest\022\014\n\004uui" +
      "d\030\001 \002(\t\022\017\n\007content\030\002 \002(\014\022\016\n\006offset\030\003 \002(\005" +
      "\022\020\n\010capacity\030\004 \002(\005\022\r\n\005alias\030\005 \001(\t\"c\n\rChu" +
      "nkResponse\022\014\n\004uuid\030\001 \002(\t\022\016\n\006offset\030\002 \002(\005" +
      "\022\014\n\004peer\030\003 \002(\t\022\n\n\002ok\030\004 \002(\010\022\013\n\003eof\030\005 \001(\010\022" +
      "\r\n\005alias\030\006 \001(\t28\n\rStreamService\022\'\n\006strea" +
      "m\022\r.ChunkRequest\032\016.ChunkResponseB6\n\037com." +
      "qihoo.sdet.jio.api.protocolB\016StreamProto" +
      "colH\001\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ChunkRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ChunkRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ChunkRequest_descriptor,
              new java.lang.String[] { "Uuid", "Content", "Offset", "Capacity", "Alias", });
          internal_static_ChunkResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ChunkResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ChunkResponse_descriptor,
              new java.lang.String[] { "Uuid", "Offset", "Peer", "Ok", "Eof", "Alias", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
